close all;
x = inp_vects('Введите вектор значений X (ч/з запятую, без скобок):'); % Задание вектора X (начальные аргументы)
while (~myunique(x)) % Проверка на уникальность аргументов функции
    disp('Вектор аргументов обязан быть уникален!');
    x = inp_vects('Введите вектор значений X (ч/з запятую, без скобок):'); % Задание вектора X (начальные аргументы)
end
y = inp_vects('Введите вектор значений Y (ч/з запятую, без скобок):'); % Задание вектора Y (начальные значения)
while (length(x) ~= length(y))
    disp('Количество элементов в векторах X и Y должно совпадать!'); % Проверка на правильность введения векторов аргументов и значений
    y = inp_vects('Введите вектор значений Y (ч/з запятую, без скобок):');
end
x0 = inp_vects('Введите вектор значений Х0 (ч/з запятую, без скобок):'); % Задание вектора X0 (аргументы для искомых значений)
while (mymax(x0) > mymax(x) || mymin(x0) < mymin(x)) % Проверка на правильность введения вектора Х0
    disp('При интерполяции значения должны искаться только для аргументов, находящихся мужду известными точками!');
    x0 = inp_vects('Введите вектор значений X0 (ч/з запятую, без скобок):');
end

f = lagrange(x, y); % Вызов разработанной функции, возвращающий функцию-полином, согласно методу Лагранжа
disp('Искомые значения (в виде точек) c использованием функции lagrange:');
show(f, x0); % Поиск и вывод в консоль значений для искомых точек
x1 = x(1):(x(length(x))-x(1))/100:x(length(x)); % Создание вектора аргументов для построения графика функции
y1 = f(x1); % Создание вектора значений для построения графика функции
y0 = f(x0); % Создание вектора искомых значений для построения искомых точек на графике

% Построение графика для функции, вычисленной с помощью разработанной
% функции lagrange
hold on;
title('График функции, полученной с помощью разработанной функции lagrange');
plot(x, y, 'o','LineWidth', 2);
plot(x1, y1);
plot(x0, y0, '*', 'MarkerSize', 10, 'LineWidth', 2');
xlabel('x');
ylabel('y');
legend({'Начальные точки','Полученная функция', 'Искомые точки'},'Location','southeast');
hold off;

% Расчет функции и значений с использованием встроенных функций
p = polyfit(x, y, length(x)-1);
y1 = polyval(p, x1);
y0 = polyval(p, x0);

disp('Искомые значения (в виде точек) c использованием встроенных функций:');
show(coefs2func(myflip(p)), x0); % Поиск и вывод в консоль значений для искомых точек

% Построение графика для функции, вычисленной с помощью встроенных функций
% polyfit и polyval
figure;
hold on;
title('График функции, полученной с помощью встроенных функций polyfit и polyval');
plot(x, y, 'o','LineWidth', 2);
plot(x1, y1);
plot(x0, y0, '*', 'MarkerSize', 10, 'LineWidth', 2');
xlabel('x');
ylabel('y');
legend({'Начальные точки','Полученная функция', 'Искомые точки'},'Location','southeast');
hold off;
drawnow;