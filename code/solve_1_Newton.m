function output = solve_1_Newton(f, a, b, e)
% Функция, реализующая поиск корня на интервале функции по
% методу Ньютона.
% f - function handle, функция
% a, b - левая и правая границы промежутка
% e - погрешность вычисления
%
% Результат - вычисленное значение корня или текст возникшей ошибки

d_func = diskret(f, a, 1); % Определение производной в точке а
dd_func = diskret(f, a, 2); % Определение второй производной
if dd_func*f(a) > 0 % Условие для точки а
    output = a;
else
    output = b;
end

format longE;
i = 0; % Счетчик количества итераций
divis = f(output)/d_func; % Переменная, хранящее изменение функции в данной точке
accur = abs(divis); % Точность определения корня при данном значении корня
while accur > e % Пока точность недостаточна, выполнить алгоритм Ньютона
    if i > 100
        output = 'Слишком большое количество итераций!';
        break;
    end
    output = output - divis; % Новый корень
    divis = f(output)/diskret(f, output, 1);
    accur = abs(divis); % Точность при новом корне
    i = i + 1;
end
end